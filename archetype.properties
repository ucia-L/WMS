# 工程的maven坐标，生成代码时会进行替换，注意:
#   1. 原型工程中java类的基础package需要和archetype.groupId的值保持一致
#   2. pom.xml中的坐标需要和此处配置的一致,groupId放在artifactId之前，artifactId放在mainClass之前
#   3. 如果pom.xml文件中有一些dependency拥有相同的groupId则需要把原型工程的坐标放到他们之前，这里建议保持模板原样即可
#   4. Spring的启动类mainClass必须在groupId对应的package之下
archetype.groupId=com.netease.cloud
archetype.artifactId=low-code-app-archetype
archetype.version=1.0-SNAPSHOT
archetype.mainClass=${archetype.groupId}.Application

# 工程初始化时需要进行package替换，根据文件后缀定义哪些文件需要进行替换
archetype.filteredExtensions=java,xml
# 工程初始化时需要进行package替换，根据通配符定义哪些文件需要进行替换
#archetype.filteredPatterns=/**/.java
# 工程初始化时需要进行package替换，定义哪些文件不需要进行替换，如果某个目录下的文件都不会包含packageName则添加该项在加载模板时会提速
archetype.filtered.ignorePath=/src/main/resources/static,/src/main/resources/i18n

# 需要忽略的文件,生成代码时这些文件会被过滤掉,不会生成到目标工程中
archetype.excludePatterns=/target,/**/*.iml,/.idea/**/*,install-archetype.sh,archetype-metadata.xml,/.git

