<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  automatically generated LoadOutBoundInspectionCustomizeService Mapper xml
-->
<mapper namespace="com.weitest.wms.repository.LoadOutBoundInspectionCustomizeServiceMapper">

    <resultMap id="AnonymousStructure_68653DA8EC7C1852D8209A98376127A9" type="com.weitest.wms.domain.structure.anonymous.AnonymousStructure_65D4FBF1CDABA1524741C04438F4588B">
	<id column="T1_C1" property="outBoundInspection.id"/>
	<result column="T2_C1" property="outBoundGood.id"/>
	<result column="T2_C2" property="outBoundGood.name"/>
	<result column="T2_C3" property="outBoundGood.quantity"/>
	<result column="T2_C4" property="outBoundGood.status"/>
	<result column="T1_C2" property="outBoundInspection.createdTime"/>
	<result column="T1_C3" property="outBoundInspection.updatedTime"/>
	<result column="T1_C4" property="outBoundInspection.createdBy"/>
	<result column="T1_C5" property="outBoundInspection.updatedBy"/>
	<result column="T1_C6" property="outBoundInspection.orderID"/>
	<result column="T1_C7" property="outBoundInspection.outBoundGoodID"/>
	<result column="T1_C8" property="outBoundInspection.inspection_status"/>
	<result column="T1_C9" property="outBoundInspection.inspectionWorkerID"/>
	<result column="T1_C10" property="outBoundInspection.inspectionWorkerName"/>
	<result column="T1_C11" property="outBoundInspection.inspectionTime"/>
	<result column="T1_C12" property="outBoundInspection.note"/>
</resultMap>
<select id="getAnonymousStructure_68653DA8EC7C1852D8209A98376127A9" resultMap="AnonymousStructure_68653DA8EC7C1852D8209A98376127A9">
	 SELECT `OutBoundInspection`.`id` `T1_C1`,`OutBoundInspection`.`createdTime` `T1_C2`,`OutBoundInspection`.`updatedTime` `T1_C3`,`OutBoundInspection`.`createdBy` `T1_C4`,`OutBoundInspection`.`updatedBy` `T1_C5`,`OutBoundInspection`.`orderID` `T1_C6`,`OutBoundInspection`.`outBoundGoodID` `T1_C7`,`OutBoundInspection`.`inspectionStatus` `T1_C8`,`OutBoundInspection`.`inspectionWorkerID` `T1_C9`,`OutBoundInspection`.`inspectionWorkerName` `T1_C10`,`OutBoundInspection`.`inspectionTime` `T1_C11`,`OutBoundInspection`.`note` `T1_C12`,`OutBoundGood`.`id` `T2_C1`,`OutBoundGood`.`name` `T2_C2`,`OutBoundGood`.`quantity` `T2_C3`,`OutBoundGood`.`status` `T2_C4` FROM `OutBoundInspection` INNER JOIN `OutBoundGood` ON `OutBoundInspection`.`outBoundGoodID` = `OutBoundGood`.`id` 
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix = "WHERE" prefixOverrides = "and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or 1==1 or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`orderID` = #{InspectionFilter.orderID}
</trim>
</if> 
<if test=" ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) and 1==1 ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionStatus` = #{InspectionFilter.inspection_status}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or 1==1 or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionWorkerID` = #{InspectionFilter.inspectionWorkerID}
</trim>
</if> 
<if test=" 1==1 and ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionWorkerName` LIKE concat('%', concat(#{InspectionFilter.inspectionWorkerName}, '%'))
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionTime` = #{InspectionFilter.inspectionTime}
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`id` = #{GoodFilter.id}
</trim>
</if> 
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`quantity` = #{GoodFilter.quantity}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`name` LIKE concat('%', concat(#{GoodFilter.name}, '%'))
</trim>
</if> 
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`status` = #{GoodFilter.status}
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" 1==1 ">
	 LIMIT ${( 1000 * ( 1 - 1 ) )}, ${1000}
</if>
</select>
<select id="countAnonymousStructure_68653DA8EC7C1852D8209A98376127A9" resultType="java.lang.Long">
	SELECT COUNT(*) FROM `OutBoundInspection` INNER JOIN `OutBoundGood` ON `OutBoundInspection`.`outBoundGoodID` = `OutBoundGood`.`id` 
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix = "WHERE" prefixOverrides = "and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or 1==1 or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) or ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) or 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.orderID!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`orderID` = #{InspectionFilter.orderID}
</trim>
</if> 
<if test=" ( InspectionFilter!=null and InspectionFilter.inspection_status!=null ) and 1==1 ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionStatus` = #{InspectionFilter.inspection_status}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) or 1==1 or ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( InspectionFilter!=null and InspectionFilter.inspectionWorkerID!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionWorkerID` = #{InspectionFilter.inspectionWorkerID}
</trim>
</if> 
<if test=" 1==1 and ( InspectionFilter!=null and InspectionFilter.inspectionWorkerName!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionWorkerName` LIKE concat('%', concat(#{InspectionFilter.inspectionWorkerName}, '%'))
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( InspectionFilter!=null and InspectionFilter.inspectionTime!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundInspection`.`inspectionTime` = #{InspectionFilter.inspectionTime}
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 or ( GoodFilter!=null and GoodFilter.quantity!=null ) or ( GoodFilter!=null and GoodFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`id` = #{GoodFilter.id}
</trim>
</if> 
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`quantity` = #{GoodFilter.quantity}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) or 1==1 or ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( GoodFilter!=null and GoodFilter.name!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`name` LIKE concat('%', concat(#{GoodFilter.name}, '%'))
</trim>
</if> 
<if test=" 1==1 and ( GoodFilter!=null and GoodFilter.status!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundGood`.`status` = #{GoodFilter.status}
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if>
</select>


</mapper>