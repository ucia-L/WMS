<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  automatically generated LoadOutBoundSecSortingsCustomizeService Mapper xml
-->
<mapper namespace="com.weitest.wms.repository.LoadOutBoundSecSortingsCustomizeServiceMapper">

    <resultMap id="AnonymousStructure_919B1BD35940FF5F19FE0AD0A28FBDBA" type="com.weitest.wms.domain.structure.anonymous.AnonymousStructure_CEE07BDB71ADD026A1700801271CF3DE">
	<id column="T2_C1" property="outBoundSecSorting.id"/>
	<result column="T1_C1" property="outboundPacking.id"/>
	<result column="T1_C2" property="outboundPacking.outbound_good_id"/>
	<result column="T1_C3" property="outboundPacking.quantity"/>
	<result column="T1_C4" property="outboundPacking.warehouseArea_id"/>
	<result column="T1_C5" property="outboundPacking.shelf_id"/>
	<result column="T1_C6" property="outboundPacking.outbound_tmparea_id"/>
	<result column="T1_C7" property="outboundPacking.status"/>
	<result column="T1_C8" property="outboundPacking.outbound_commodity_name"/>
	<result column="T1_C9" property="outboundPacking.outBoundOrderID"/>
	<result column="T2_C2" property="outBoundSecSorting.createdTime"/>
	<result column="T2_C3" property="outBoundSecSorting.updatedTime"/>
	<result column="T2_C4" property="outBoundSecSorting.createdBy"/>
	<result column="T2_C5" property="outBoundSecSorting.updatedBy"/>
	<result column="T2_C6" property="outBoundSecSorting.packingID"/>
	<result column="T2_C7" property="outBoundSecSorting.status_Sec"/>
	<result column="T2_C8" property="outBoundSecSorting.secSortingWorkerID"/>
	<result column="T2_C9" property="outBoundSecSorting.secSortingWorkerName"/>
	<result column="T2_C10" property="outBoundSecSorting.secSortingData"/>
	<result column="T2_C11" property="outBoundSecSorting.outBoundTmpArea"/>
</resultMap>
<select id="getAnonymousStructure_919B1BD35940FF5F19FE0AD0A28FBDBA" resultMap="AnonymousStructure_919B1BD35940FF5F19FE0AD0A28FBDBA">
	 SELECT `OutBoundSecSorting`.`id` `T2_C1`,`OutBoundSecSorting`.`createdTime` `T2_C2`,`OutBoundSecSorting`.`updatedTime` `T2_C3`,`OutBoundSecSorting`.`createdBy` `T2_C4`,`OutBoundSecSorting`.`updatedBy` `T2_C5`,`OutBoundSecSorting`.`packingID` `T2_C6`,`OutBoundSecSorting`.`statusSec` `T2_C7`,`OutBoundSecSorting`.`secSortingWorkerID` `T2_C8`,`OutBoundSecSorting`.`secSortingWorkerName` `T2_C9`,`OutBoundSecSorting`.`secSortingData` `T2_C10`,`OutBoundSecSorting`.`outBoundTmpArea` `T2_C11`,`OutboundPacking`.`id` `T1_C1`,`OutboundPacking`.`outboundGoodId` `T1_C2`,`OutboundPacking`.`quantity` `T1_C3`,`OutboundPacking`.`warehouseAreaId` `T1_C4`,`OutboundPacking`.`shelfId` `T1_C5`,`OutboundPacking`.`outboundTmpareaId` `T1_C6`,`OutboundPacking`.`status` `T1_C7`,`OutboundPacking`.`outboundCommodityName` `T1_C8`,`OutboundPacking`.`outBoundOrderID` `T1_C9` FROM `OutBoundSecSorting` INNER JOIN `OutboundPacking` ON `OutBoundSecSorting`.`packingID` = `OutboundPacking`.`id` 
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) or ( packingFilter!=null and packingFilter.quantity!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix = "WHERE" prefixOverrides = "and |or">
	
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) or ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`id` = #{sortingFilter.id}
</trim>
</if> 
<if test=" 1==1 and ( packingFilter!=null and packingFilter.outbound_good_id!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`outboundGoodId` = #{packingFilter.outbound_good_id}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or 1==1 or ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`outboundCommodityName` LIKE concat('%', concat(#{packingFilter.outbound_commodity_name}, '%'))
</trim>
</if> 
<if test=" 1==1 and ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`quantity` = #{packingFilter.quantity}
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( sortingFilter!=null and sortingFilter.status_Sec!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`statusSec` = #{sortingFilter.status_Sec}
</trim>
</if> 
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.secSortingData!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingData` = #{sortingFilter.secSortingData}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingWorkerID` = #{sortingFilter.secSortingWorkerID}
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) and 1==1 ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingWorkerName` LIKE concat('%', concat(#{sortingFilter.secSortingWorkerName}, '%'))
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" 1==1 ">
	 LIMIT ${( 1000 * ( 1 - 1 ) )}, ${1000}
</if>
</select>
<select id="countAnonymousStructure_919B1BD35940FF5F19FE0AD0A28FBDBA" resultType="java.lang.Long">
	SELECT COUNT(*) FROM `OutBoundSecSorting` INNER JOIN `OutboundPacking` ON `OutBoundSecSorting`.`packingID` = `OutboundPacking`.`id` 
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) or ( packingFilter!=null and packingFilter.quantity!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix = "WHERE" prefixOverrides = "and |or">
	
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) or ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 or ( packingFilter!=null and packingFilter.outbound_good_id!=null ) or ( sortingFilter!=null and sortingFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.id!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`id` = #{sortingFilter.id}
</trim>
</if> 
<if test=" 1==1 and ( packingFilter!=null and packingFilter.outbound_good_id!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`outboundGoodId` = #{packingFilter.outbound_good_id}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) or 1==1 or ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( packingFilter!=null and packingFilter.outbound_commodity_name!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`outboundCommodityName` LIKE concat('%', concat(#{packingFilter.outbound_commodity_name}, '%'))
</trim>
</if> 
<if test=" 1==1 and ( packingFilter!=null and packingFilter.quantity!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutboundPacking`.`quantity` = #{packingFilter.quantity}
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( sortingFilter!=null and sortingFilter.status_Sec!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingData!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" ( sortingFilter!=null and sortingFilter.status_Sec!=null ) and 1==1 ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`statusSec` = #{sortingFilter.status_Sec}
</trim>
</if> 
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.secSortingData!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingData` = #{sortingFilter.secSortingData}
</trim>
</trim>
</if>
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) or 1==1 or ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	
<if test=" 1==1 and ( sortingFilter!=null and sortingFilter.secSortingWorkerID!=null ) ">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingWorkerID` = #{sortingFilter.secSortingWorkerID}
</trim>
</if> 
<if test=" ( sortingFilter!=null and sortingFilter.secSortingWorkerName!=null ) and 1==1 ">
	
<trim prefix="and">
	
<trim prefix="(" suffix=")" prefixOverrides="and |or">
	`OutBoundSecSorting`.`secSortingWorkerName` LIKE concat('%', concat(#{sortingFilter.secSortingWorkerName}, '%'))
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</trim>
</if>
</trim>
</if>
</select>


</mapper>