<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  automatically generated WarehouseAccountEntity Mapper xml
-->
<mapper namespace="com.weitest.wms.repository.entities.WarehouseAccountEntityMapper">
    <resultMap id="BaseResultMap" type="com.weitest.wms.domain.entities.WarehouseAccountEntity">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="idTag" jdbcType="VARCHAR" property="id_tag" />
        <result column="balance" jdbcType="DECIMAL" property="balance" />
        <result column="note" jdbcType="VARCHAR" property="note" />
        <result column="warehouseId" jdbcType="BIGINT" property="warehouse_id" />
        <result column="category" jdbcType="VARCHAR" property="category" />
        <result column="createdTime" jdbcType="TIMESTAMP" property="createdTime" />
    </resultMap>

    <!--
       ###################################################
       ######### mysql
       ###################################################
     -->
    <insert id="insert" parameterType="com.weitest.wms.domain.entities.WarehouseAccountEntity"  >
        INSERT INTO `WarehouseAccount` (
            `id`
            ,`idTag`
            ,`balance`
            ,`note`
            ,`warehouseId`
            ,`category`
            ,`createdTime`
        )
        VALUES (
            #{id,jdbcType=BIGINT}
            ,#{id_tag,jdbcType=VARCHAR}
            ,#{balance,jdbcType=DECIMAL}
            ,#{note,jdbcType=VARCHAR}
            ,#{warehouse_id,jdbcType=BIGINT}
            ,#{category,jdbcType=VARCHAR}
            ,#{createdTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="batchInsert"  parameterType="java.util.List" >
        INSERT INTO `WarehouseAccount` (
            `id`
            ,`idTag`
            ,`balance`
            ,`note`
            ,`warehouseId`
            ,`category`
            ,`createdTime`
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.id,jdbcType=BIGINT}
            ,#{item.id_tag,jdbcType=VARCHAR}
            ,#{item.balance,jdbcType=DECIMAL}
            ,#{item.note,jdbcType=VARCHAR}
            ,#{item.warehouse_id,jdbcType=BIGINT}
            ,#{item.category,jdbcType=VARCHAR}
            ,#{item.createdTime,jdbcType=TIMESTAMP}
         )
        </foreach>
    </insert>

    <update id="update" parameterType="com.weitest.wms.domain.entities.WarehouseAccountEntity" >
        UPDATE `WarehouseAccount`
        <set>
            <if test="updateFields == null or updateFields.contains('id_tag')">`idTag` = #{bean.id_tag,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('balance')">`balance` = #{bean.balance,jdbcType=DECIMAL},</if>
            <if test="updateFields == null or updateFields.contains('note')">`note` = #{bean.note,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('warehouse_id')">`warehouseId` = #{bean.warehouse_id,jdbcType=BIGINT},</if>
            <if test="updateFields == null or updateFields.contains('category')">`category` = #{bean.category,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('createdTime')">`createdTime` = #{bean.createdTime,jdbcType=TIMESTAMP},</if>
        </set>
        where `id` = #{bean.id}
    </update>

    <!-- todo -->
    <update id="batchUpdate" parameterType="com.weitest.wms.domain.entities.WarehouseAccountEntity" >
        UPDATE `WarehouseAccount`
        <set>
            <if test="updateFields == null or updateFields.contains('id_tag')">`idTag` = #{bean.id_tag,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('balance')">`balance` = #{bean.balance,jdbcType=DECIMAL},</if>
            <if test="updateFields == null or updateFields.contains('note')">`note` = #{bean.note,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('warehouse_id')">`warehouseId` = #{bean.warehouse_id,jdbcType=BIGINT},</if>
            <if test="updateFields == null or updateFields.contains('category')">`category` = #{bean.category,jdbcType=VARCHAR},</if>
            <if test="updateFields == null or updateFields.contains('createdTime')">`createdTime` = #{bean.createdTime,jdbcType=TIMESTAMP},</if>
        </set>
        where `id` = #{bean.id}
    </update>


    <delete id="delete" parameterType="java.lang.Long" >
        DELETE FROM `WarehouseAccount` where `id` = #{id}
    </delete>


    <delete id="batchDelete" >
        DELETE FROM `WarehouseAccount` where `id` in
        <foreach collection="list" item="pkValueItem" index="index"  separator="," open="(" close=")">
            #{pkValueItem}
        </foreach>
    </delete>

    <delete id="deleteReference">
        DELETE FROM `WarehouseAccount`
        <where>
            <choose>
                <when test="property == 'id'">
                    AND `id` = #{value, jdbcType=BIGINT}
                </when>
                <when test="property == 'id_tag'">
                    AND `idTag` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'balance'">
                    AND `balance` = #{value, jdbcType=DECIMAL}
                </when>
                <when test="property == 'note'">
                    AND `note` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'warehouse_id'">
                    AND `warehouseId` = #{value, jdbcType=BIGINT}
                </when>
                <when test="property == 'category'">
                    AND `category` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'createdTime'">
                    AND `createdTime` = #{value, jdbcType=TIMESTAMP}
                </when>
                <otherwise>
                    MUST BE ERROR
                </otherwise>
            </choose>
        </where>
    </delete>

    <select id="existReference" resultType="java.lang.Long" >
        select `id` from `WarehouseAccount` 
        <where>
            <choose>
                <when test="property == 'id'">
                    AND `id` = #{value, jdbcType=BIGINT}
                </when>
                <when test="property == 'id_tag'">
                    AND `idTag` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'balance'">
                    AND `balance` = #{value, jdbcType=DECIMAL}
                </when>
                <when test="property == 'note'">
                    AND `note` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'warehouse_id'">
                    AND `warehouseId` = #{value, jdbcType=BIGINT}
                </when>
                <when test="property == 'category'">
                    AND `category` = #{value, jdbcType=VARCHAR}
                </when>
                <when test="property == 'createdTime'">
                    AND `createdTime` = #{value, jdbcType=TIMESTAMP}
                </when>
                <otherwise>
                    MUST BE ERROR
                </otherwise>
            </choose>
        </where>
         LIMIT 1
    </select>


    <select id="selectOne" resultMap="BaseResultMap" >
        select * from `WarehouseAccount` where `id`=#{id}
    </select>

    <select id="selectList" parameterType="com.weitest.wms.service.dto.filters.AbstractQueryFilter" resultMap="BaseResultMap" >
        select * from `WarehouseAccount`
        <where>
            ${filter.sql("mysql")}
        </where>
    </select>

    <select id="count" parameterType="com.weitest.wms.service.dto.filters.AbstractQueryFilter" resultType="java.lang.Integer" >
        select count(1) from `WarehouseAccount`
        <where>
            ${filter.sql("mysql")}
        </where>
    </select>

    <insert id="createOrUpdate" parameterType="com.weitest.wms.domain.entities.WarehouseAccountEntity">
        INSERT INTO `WarehouseAccount` (
            `id`
            ,`idTag`
            ,`balance`
            ,`note`
            ,`warehouseId`
            ,`category`
            ,`createdTime`
        )
        VALUES (
            #{id,jdbcType=BIGINT}
            ,#{id_tag,jdbcType=VARCHAR}
            ,#{balance,jdbcType=DECIMAL}
            ,#{note,jdbcType=VARCHAR}
            ,#{warehouse_id,jdbcType=BIGINT}
            ,#{category,jdbcType=VARCHAR}
            ,#{createdTime,jdbcType=TIMESTAMP}
        )
    </insert>


    <update id="updateBy">
        UPDATE `WarehouseAccount`
        <set>
        <if test="updateFields == null or updateFields.contains('id_tag')">`idTag` = #{bean.id_tag,jdbcType=VARCHAR},</if>
        <if test="updateFields == null or updateFields.contains('balance')">`balance` = #{bean.balance,jdbcType=DECIMAL},</if>
        <if test="updateFields == null or updateFields.contains('note')">`note` = #{bean.note,jdbcType=VARCHAR},</if>
        <if test="updateFields == null or updateFields.contains('warehouse_id')">`warehouseId` = #{bean.warehouse_id,jdbcType=BIGINT},</if>
        <if test="updateFields == null or updateFields.contains('category')">`category` = #{bean.category,jdbcType=VARCHAR},</if>
        <if test="updateFields == null or updateFields.contains('createdTime')">`createdTime` = #{bean.createdTime,jdbcType=TIMESTAMP},</if>
        </set>
        where ${filter.sql("mysql")}
    </update>

    <delete id="deleteBy" parameterType="com.weitest.wms.service.dto.filters.AbstractQueryFilter">
        DELETE FROM `WarehouseAccount` where ${filter.sql("mysql")}
    </delete>
</mapper>